name: Terraform CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure Login
        run: |
          az login --service-principal --username ${{ secrets.AZURE_CLIENT_ID }} --password ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

          - name: az info
          run: az account show
        
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
  
      - name: Terraform Init
        run: |
            terraform init
  
      - name: Terraform Format
        run: |
            terraform fmt -check=true
        continue-on-error: true
  
      - name: Terraform Validate
        run: |
            terraform validate
  
      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        run: |
              terraform plan -lock=false > terraform-plan.txt
              echo "::set-env name=PLAN_SUCCESS::true"
  
      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
              terraform apply --auto-approve
  
      - name: Set Output Environment File
        run: |
            echo "PLAN_SUCCESS=${{ env.PLAN_SUCCESS }}" >> $GITHUB_ENV