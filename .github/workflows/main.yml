name: Terraform CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      

      - name: Azure Login
        run: |
          az login --service-principal --username ${{ secrets.AZURE_CLIENT_ID }} --password ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
  
      - name: Extract State Lock ID
        id: state-lock
        run: |
          lock_info=$(terraform state lock-info tests/terraform.tfstate)
          state_lock_id=$(echo "$lock_info" | awk '/ID:/ {print $2}')
          echo "STATE_LOCK_ID=$state_lock_id" >> $GITHUB_ENV

      - name: Terraform Init
        run: |
          terraform init

      - name: Terraform Format
        run: |
          terraform fmt -check=true
        continue-on-error: true

      - name: Terraform Validate
        run: |
          terraform validate

      - name: Remove Terraform State Lock
        run: |
          if [[ -n "${{ env.STATE_LOCK_ID }}" ]]; then
            terraform force-unlock -force "${{ env.STATE_LOCK_ID }}"
          else
            echo "No state lock found. Skipping removal."
          fi

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        run: |
          terraform plan -var "AZURE_CLIENT_ID=${{ env.ARM_CLIENT_ID }}" \
            -var "AZURE_CLIENT_SECRET=${{ env.ARM_CLIENT_SECRET }}" \
            -var "AZURE_SUBSCRIPTION_ID=${{ env.ARM_SUBSCRIPTION_ID }}" \
            -var "AZURE_TENANT_ID=${{ env.ARM_TENANT_ID }}" \
            -state-lock-id "${{ env.STATE_LOCK_ID }}"

      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          terraform apply --auto-approve \
            -var "AZURE_CLIENT_ID=${{ env.ARM_CLIENT_ID }}" \
            -var "AZURE_CLIENT_SECRET=${{ env.ARM_CLIENT_SECRET }}" \
            -var "AZURE_SUBSCRIPTION_ID=${{ env.ARM_SUBSCRIPTION_ID }}" \
            -var "AZURE_TENANT_ID=${{ env.ARM_TENANT_ID }}"
